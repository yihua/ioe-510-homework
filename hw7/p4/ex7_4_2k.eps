%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.1.0.604 (R2013a). Operating System: Microsoft Windows 8.
%%Title: F:\alfred_ioe\ex7_4_2k.eps
%%CreationDate: 04/14/2014  03:14:00
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    95   238   515   553
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    95   238   515   553
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 1140 6636 csm

    0     0  5049  3780 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 5050 3781 rf
6 w
0 3082 3913 0 0 -3082 656 3364 4 MP
PP
-3913 0 0 3082 3913 0 0 -3082 656 3364 5 MP stroke
4 w
DO
SO
6 w
0 sg
 656  282 mt 4569  282 L
 656 3364 mt 4569 3364 L
4569 3364 mt 4569  282 L
 656 3364 mt  656  282 L
 656 3364 mt 4569 3364 L
 656 3364 mt  656  282 L
1011 3364 mt 1011 3324 L
1011  282 mt 1011  322 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 945 3509 mt 
(10) s
1406 3364 mt 1406 3324 L
1406  282 mt 1406  322 L
1340 3509 mt 
(20) s
1802 3364 mt 1802 3324 L
1802  282 mt 1802  322 L
1736 3509 mt 
(30) s
2197 3364 mt 2197 3324 L
2197  282 mt 2197  322 L
2131 3509 mt 
(40) s
2592 3364 mt 2592 3324 L
2592  282 mt 2592  322 L
2526 3509 mt 
(50) s
2987 3364 mt 2987 3324 L
2987  282 mt 2987  322 L
2921 3509 mt 
(60) s
3383 3364 mt 3383 3324 L
3383  282 mt 3383  322 L
3317 3509 mt 
(70) s
3778 3364 mt 3778 3324 L
3778  282 mt 3778  322 L
3712 3509 mt 
(80) s
4173 3364 mt 4173 3324 L
4173  282 mt 4173  322 L
4107 3509 mt 
(90) s
4569 3364 mt 4569 3324 L
4569  282 mt 4569  322 L
4469 3509 mt 
(100) s
 656 2924 mt  695 2924 L
4569 2924 mt 4529 2924 L
 418 2968 mt 
(-20) s
 656 2465 mt  695 2465 L
4569 2465 mt 4529 2465 L
 418 2509 mt 
(-15) s
 656 2006 mt  695 2006 L
4569 2006 mt 4529 2006 L
 418 2050 mt 
(-10) s
 656 1547 mt  695 1547 L
4569 1547 mt 4529 1547 L
 485 1591 mt 
(-5) s
 656 1088 mt  695 1088 L
4569 1088 mt 4529 1088 L
 555 1132 mt 
(0) s
 656  629 mt  695  629 L
4569  629 mt 4529  629 L
 555  673 mt 
(5) s
 656  282 mt 4569  282 L
 656 3364 mt 4569 3364 L
4569 3364 mt 4569  282 L
 656 3364 mt  656  282 L
gs 656 283 3914 3082 rc
DA
40 6 40 1 39 8 40 -9 39 -12 40 7 39 -20 40 20 
39 10 40 -17 39 15 40 -6 39 -10 40 -3 39 23 40 -3 
39 -20 40 14 39 7 40 -3 40 -9 39 -28 40 16 39 10 
40 4 39 -8 40 15 39 -20 40 -5 39 -8 40 34 39 -2 
40 -23 39 21 40 1 39 -8 40 -11 39 -16 40 7 40 14 
39 -9 40 14 39 -9 40 -12 39 12 40 -5 39 4 40 -5 
39 2 40 11 39 -20 40 -10 39 19 40 -12 39 -34 40 34 
39 4 40 -14 39 8 40 14 40 12 39 -7 40 -27 39 5 
40 -33 39 36 40 4 39 -4 40 -48 39 48 40 11 39 -35 
40 -44 39 66 40 -48 39 -31 40 -4 39 -49 40 122 40 -37 
39 -60 40 98 39 -46 40 -94 39 -123 40 89 39 -42 40 -9 
39 -64 40 101 39 -83 40 -255 39 -49 40 67 39 -407 40 57 
39 20 40 -2176 39 2801 656 563 100 MP stroke
gr

DA
SO
60 W
656 563 PD
60 W
695 3364 PD
60 W
735 1188 PD
60 W
774 1208 PD
60 W
814 1265 PD
60 W
853 858 PD
60 W
893 925 PD
60 W
932 876 PD
60 W
972 621 PD
60 W
1011 538 PD
60 W
1051 639 PD
60 W
1090 575 PD
60 W
1130 566 PD
60 W
1169 524 PD
60 W
1209 613 PD
60 W
1248 490 PD
60 W
1288 396 PD
60 W
1327 350 PD
60 W
1367 448 PD
60 W
1406 388 PD
60 W
1446 351 PD
60 W
1486 473 PD
60 W
1525 424 PD
60 W
1565 420 PD
60 W
1604 389 PD
60 W
1644 341 PD
60 W
1683 407 PD
60 W
1723 363 PD
60 W
1762 328 PD
60 W
1802 339 PD
60 W
1841 387 PD
60 W
1881 339 PD
60 W
1920 335 PD
60 W
1960 339 PD
60 W
1999 375 PD
60 W
2039 342 PD
60 W
2078 347 PD
60 W
2118 320 PD
60 W
2157 313 PD
60 W
2197 325 PD
60 W
2237 339 PD
60 W
2276 347 PD
60 W
2316 333 PD
60 W
2355 337 PD
60 W
2395 371 PD
60 W
2434 337 PD
60 W
2474 325 PD
60 W
2513 344 PD
60 W
2553 334 PD
60 W
2592 314 PD
60 W
2632 325 PD
60 W
2671 327 PD
60 W
2711 322 PD
60 W
2750 326 PD
60 W
2790 321 PD
60 W
2829 333 PD
60 W
2869 321 PD
60 W
2908 312 PD
60 W
2948 326 PD
60 W
2987 317 PD
60 W
3027 331 PD
60 W
3067 338 PD
60 W
3106 322 PD
60 W
3146 311 PD
60 W
3185 303 PD
60 W
3225 304 PD
60 W
3264 325 PD
60 W
3304 302 PD
60 W
3343 300 PD
60 W
3383 334 PD
60 W
3422 326 PD
60 W
3462 321 PD
60 W
3501 301 PD
60 W
3541 316 PD
60 W
3580 308 PD
60 W
3620 312 PD
60 W
3659 322 PD
60 W
3699 338 PD
60 W
3738 310 PD
60 W
3778 301 PD
60 W
3818 298 PD
60 W
3857 305 PD
60 W
3897 319 PD
60 W
3936 299 PD
60 W
3976 296 PD
60 W
4015 319 PD
60 W
4055 316 PD
60 W
4094 306 PD
60 W
4134 300 PD
60 W
4173 315 PD
60 W
4213 298 PD
60 W
4252 308 PD
60 W
4292 328 PD
60 W
4331 308 PD
60 W
4371 315 PD
60 W
4410 303 PD
60 W
4450 294 PD
60 W
4489 302 PD
60 W
4529 303 PD
60 W
4569 309 PD
DA
gs 656 283 3914 3082 rc
gr

2395 3652 mt 
(Iteration) s
 336 2465 mt  -90 rotate
(Lagrangian lower bound) s
90 rotate
 639 3407 mt 
( ) s
4553  325 mt 
( ) s
SO
1 sg
0 334 1285 0 0 -334 3225 3305 4 MP
PP
-1285 0 0 334 1285 0 0 -334 3225 3305 5 MP stroke
4 w
DO
SO
6 w
0 sg
3225 2971 mt 4510 2971 L
3225 3305 mt 4510 3305 L
4510 3305 mt 4510 2971 L
3225 3305 mt 3225 2971 L
3225 3305 mt 4510 3305 L
3225 3305 mt 3225 2971 L
3225 2971 mt 4510 2971 L
3225 3305 mt 4510 3305 L
4510 3305 mt 4510 2971 L
3225 3305 mt 3225 2971 L
3699 3106 mt 
(Lagrangian LB) s
gs 3225 2971 1286 335 rc
DA
365 0 3297 3063 2 MP stroke
SO
gr

gs 3299 2882 363 363 rc
60 W
3480 3063 PD
gr

gs 3225 2971 1286 335 rc
gr

3699 3255 mt 
(z) s
gs 3225 2971 1286 335 rc
30 w
/c8 { 1.000000 0.000000 0.000000 sr} bdef
c8
365 0 3297 3212 2 MP stroke
6 w
gr

c8

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
